class Solution(object):
    def earliestAcq(self, logs, n):
        """
        :type logs: List[List[int]]
        :type n: int
        :rtype: int
        """
        root = [i for i in range(n)]
        
        def find(x):
            return root[x]
        
        def union(x, y):
            root_x = find(x)
            root_y = find(y)
            
            if root_x != root_y:
                for i in range(n):
                    if root[i] == root_y:
                        root[i] = root_x
                        
        logs = sorted(logs, key=lambda x: x[0])
        
        for log in logs:
            union(log[1], log[2])
            if len(set(root)) == 1:
                return log[0]
        return -1

sol = Solution()
print(sol.earliestAcq(logs = [[20190101,0,1],[20190104,3,4],[20190107,2,3],[20190211,1,5],[20190224,2,4],[20190301,0,3],[20190312,1,2],[20190322,4,5]], n = 6))
print(sol.earliestAcq(logs = [[0,2,0],[1,0,1],[3,0,3],[4,1,2],[7,3,1]], n = 4))   